@page "/order" 

@* have to install this *@
@using Microsoft.AspNetCore.Components.QuickGrid
@using System.Threading.Tasks;

@* our Library *@
@inject StringLibrary.FlowerShopBusiness FlowerBiz
@inject HttpClient Http
@inject NavigationManager _navigation
@inject IJSRuntime JS



<PageTitle>Order History</PageTitle>

<h1>Order History</h1>

<div>
        <QuickGrid Items="datalist">

        <PropertyColumn Property="@(p => p.Customer.Name)" Sortable="true" />
        <PropertyColumn Property="@(p => p.OrderID)" />
        <PropertyColumn Property="@(p => p.Arrangements.Count)" />
        <PropertyColumn Property="@(p => p.PersonalizedMessage)" />
        <PropertyColumn Property="@(p => p.Status.ToString())" />

        <TemplateColumn Title="Actions">
            <button class="btn btn-primary" @onclick="() => EditData(context.OrderID.ToString())">
                Edit
            </button>
            <button class="btn btn-primary" @onclick="() => DelData(context.OrderID.ToString())">
                Delete
            </button>
        </TemplateColumn>

        <div>
            <button class="btn btn-primary" @onclick="() => AddData()">
                Add Order
            </button>
        </div>
    </QuickGrid>
</div>

@code {
    private IQueryable<Order> datalist = null;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {                                                           // the web api
        List<Order> Orders = await Http.GetFromJsonAsync<List<Order>>("order");

        // keep a local copy
        FlowerBiz.OrderList.Orders = Orders;

        datalist = Orders.AsQueryable();
        StateHasChanged();
    }

    private async void AddData()
    {
        _navigation.NavigateTo("/Order/add/");
    }

    private async void EditData(string id)
    {
        Console.WriteLine("Editing " + id);
        _navigation.NavigateTo("/Order/edit/" + id);
    }

    private async void DelData(string id)
    {
        Console.WriteLine("Deleting " + id);

        await Http.PostAsJsonAsync("Order/delete/", id);
        _navigation.NavigateTo("/Order", true);
    }
}
